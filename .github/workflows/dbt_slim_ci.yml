name: dbt slim ci

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'dags/dbt/dbt_airflow_training/**'

jobs:
  changed-files:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./dags/dbt/dbt_airflow_training
    outputs:
      allsql: ${{ steps.changed-files.outputs.all_changed_files }}

    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          path: ./dags/dbt/dbt_airflow_training
          files: |
            **.sql

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "$ALL_CHANGED_FILES"

  dbt-ci-checks:
    runs-on: ubuntu-latest
    needs: changed-files
    if: ${{ needs.changed-files.outputs.allsql != '' }}
    defaults:
      run:
        working-directory: ./dags/dbt/dbt_airflow_training

    env:
      DBT_PROFILES_DIR: .
      DBT_SCHEMA: dat # for training purpose only, should be 'ci'

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download dbt prod artifacts
        run: aws s3 cp s3://${{ secrets.DBT_AIRFLOW_BUCKET_NAME }}/dbt_prod_artifacts/manifest.json ./dbt_prod_artifacts/manifest.json

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install requirements
        run: |
          pip install dbt-core==1.7.14 "dbt-spark[PyHive]==1.7" sqlfluff sqlfluff-templater-dbt
          dbt deps

      - name: Code quality checks
        run: sqlfluff lint --dialect sparksql -v ${{ needs.changed-files.outputs.allsql }}

      - name: Coverage checks
        run: |
          dbt run -s +fct_test_coverage +fct_documentation_coverage
          dbt --warn-error test -s fct_test_coverage fct_documentation_coverage

      - name: Build and test dbt models
        run: |
          dbt build --select state:modified+ --full-refresh --defer --state ./dbt_prod_artifacts
          dbt build --select state:modified.config.materialized:incremental --defer --state ./dbt_prod_artifacts
